apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
  creationTimestamp: 2018-06-15T20:08:48Z
  generation: 8
  labels:
    run: compatibility-server
  name: compatibility-server
  namespace: default
  resourceVersion: "19908269"
  selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/compatibility-server
  uid: ea4ab52b-70d7-11e8-8f57-42010a800003
spec:
  replicas: 100
  selector:
    matchLabels:
      run: compatibility-server
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: compatibility-server
    spec:
      containers:
      - image: gcr.io/python-compatibility-tools/compatibility-server:v1
        imagePullPolicy: IfNotPresent
        name: compatibility-server
        ports:
        - containerPort: 8888
          protocol: TCP
        resources: {}
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/run/docker.sock
          name: docker-sock
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      # Wait for up to 310 seconds for the server to complete the request
      # before deleting the pod. The request timeout is 300 seconds for this
      # service, and the grace period is slightly longer than that.
      terminationGracePeriodSeconds: 310
      volumes:
      - hostPath:
          path: /var/run/docker.sock
          type: File
        name: docker-sock
